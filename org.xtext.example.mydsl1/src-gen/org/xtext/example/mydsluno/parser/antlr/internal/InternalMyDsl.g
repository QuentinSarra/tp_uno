/*
 * generated by Xtext 2.23.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsluno.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsluno.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsluno.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getUnoUnoParserRuleCall_0());
			}
			lv_uno_0_0=ruleUno
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"uno",
					lv_uno_0_0,
					"org.xtext.example.mydsluno.MyDsl.Uno");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleUno
entryRuleUno returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnoRule()); }
	iv_ruleUno=ruleUno
	{ $current=$iv_ruleUno.current; }
	EOF;

// Rule Uno
ruleUno returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<Uno_Config> <pioche> '
		{
			newLeafNode(otherlv_0, grammarAccess.getUnoAccess().getUno_ConfigPiocheKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getPiochePiocheParserRuleCall_1_0());
				}
				lv_pioche_1_0=rulePioche
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					add(
						$current,
						"pioche",
						lv_pioche_1_0,
						"org.xtext.example.mydsluno.MyDsl.Pioche");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=' </pioche> <poser> '
		{
			newLeafNode(otherlv_2, grammarAccess.getUnoAccess().getPiochePoserKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getPoserPoserParserRuleCall_3_0());
				}
				lv_poser_3_0=rulePoser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					add(
						$current,
						"poser",
						lv_poser_3_0,
						"org.xtext.example.mydsluno.MyDsl.Poser");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=' </poser> <main> '
		{
			newLeafNode(otherlv_4, grammarAccess.getUnoAccess().getPoserMainKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getMainMainParserRuleCall_5_0());
				}
				lv_main_5_0=ruleMain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					add(
						$current,
						"main",
						lv_main_5_0,
						"org.xtext.example.mydsluno.MyDsl.Main");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='</main> <carte_speciale> : '
		{
			newLeafNode(otherlv_6, grammarAccess.getUnoAccess().getMainCarte_specialeKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getCartespeCarteSpeParserRuleCall_7_0());
				}
				lv_cartespe_7_0=ruleCarteSpe
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					add(
						$current,
						"cartespe",
						lv_cartespe_7_0,
						"org.xtext.example.mydsluno.MyDsl.CarteSpe");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=' </carte_speciale> '
		{
			newLeafNode(otherlv_8, grammarAccess.getUnoAccess().getCarte_specialeKeyword_8());
		}
		(
			otherlv_9=' <temps> '
			{
				newLeafNode(otherlv_9, grammarAccess.getUnoAccess().getTempsKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnoAccess().getTempsTempsParserRuleCall_9_1_0());
					}
					lv_temps_10_0=ruleTemps
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnoRule());
						}
						add(
							$current,
							"temps",
							lv_temps_10_0,
							"org.xtext.example.mydsluno.MyDsl.Temps");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=' </temps> '
			{
				newLeafNode(otherlv_11, grammarAccess.getUnoAccess().getTempsKeyword_9_2());
			}
		)?
		otherlv_12=' <tas> '
		{
			newLeafNode(otherlv_12, grammarAccess.getUnoAccess().getTasKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnoAccess().getTasTasParserRuleCall_11_0());
				}
				lv_tas_13_0=ruleTas
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnoRule());
					}
					add(
						$current,
						"tas",
						lv_tas_13_0,
						"org.xtext.example.mydsluno.MyDsl.Tas");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14=' </tas> '
		{
			newLeafNode(otherlv_14, grammarAccess.getUnoAccess().getTasKeyword_12());
		}
		(
			otherlv_15=' <nb_carte_de_depart> '
			{
				newLeafNode(otherlv_15, grammarAccess.getUnoAccess().getNb_carte_de_departKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnoAccess().getNbcarteNbCarteParserRuleCall_13_1_0());
					}
					lv_nbcarte_16_0=ruleNbCarte
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnoRule());
						}
						add(
							$current,
							"nbcarte",
							lv_nbcarte_16_0,
							"org.xtext.example.mydsluno.MyDsl.NbCarte");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=' </nb_carte_de_depart> '
			{
				newLeafNode(otherlv_17, grammarAccess.getUnoAccess().getNb_carte_de_departKeyword_13_2());
			}
		)?
		otherlv_18=' </Uno_Config>'
		{
			newLeafNode(otherlv_18, grammarAccess.getUnoAccess().getUno_ConfigKeyword_14());
		}
	)
;

// Entry rule entryRulePioche
entryRulePioche returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPiocheRule()); }
	iv_rulePioche=rulePioche
	{ $current=$iv_rulePioche.current; }
	EOF;

// Rule Pioche
rulePioche returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=' <une_fois> '
			{
				newLeafNode(otherlv_0, grammarAccess.getPiocheAccess().getUne_foisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPiocheAccess().getUnefoisUneFoisParserRuleCall_0_1_0());
					}
					lv_unefois_1_0=ruleUneFois
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPiocheRule());
						}
						add(
							$current,
							"unefois",
							lv_unefois_1_0,
							"org.xtext.example.mydsluno.MyDsl.UneFois");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=' </une_fois> '
			{
				newLeafNode(otherlv_2, grammarAccess.getPiocheAccess().getUne_foisKeyword_0_2());
			}
		)
		    |
		otherlv_3='"jusqu\u00E0 pouvoir jouer"'
		{
			newLeafNode(otherlv_3, grammarAccess.getPiocheAccess().getJusquPouvoirJouerKeyword_1());
		}
	)
;

// Entry rule entryRulePoser
entryRulePoser returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPoserRule()); }
	iv_rulePoser=rulePoser
	{ $current=$iv_rulePoser.current.getText(); }
	EOF;

// Rule Poser
rulePoser returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"classique couleur chiffre"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPoserAccess().getClassiqueCouleurChiffreKeyword_0());
		}
		    |
		kw='"cumul + 2"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPoserAccess().getCumul2Keyword_1());
		}
		    |
		kw='"cumul + 4"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPoserAccess().getCumul4Keyword_2());
		}
		    |
		kw='"cumul +2 et +4"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPoserAccess().getCumul2Et4Keyword_3());
		}
	)
;

// Entry rule entryRuleMain
entryRuleMain returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMainRule()); }
	iv_ruleMain=ruleMain
	{ $current=$iv_ruleMain.current.getText(); }
	EOF;

// Rule Main
ruleMain returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"visible"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMainAccess().getVisibleKeyword_0());
		}
		    |
		kw='"invisible"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMainAccess().getInvisibleKeyword_1());
		}
	)
;

// Entry rule entryRuleUneFois
entryRuleUneFois returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUneFoisRule()); }
	iv_ruleUneFois=ruleUneFois
	{ $current=$iv_ruleUneFois.current.getText(); }
	EOF;

// Rule UneFois
ruleUneFois returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"peut jouer"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUneFoisAccess().getPeutJouerKeyword_0());
		}
		    |
		kw='"passe son tour"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUneFoisAccess().getPasseSonTourKeyword_1());
		}
	)
;

// Entry rule entryRuleCarteSpe
entryRuleCarteSpe returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCarteSpeRule()); }
	iv_ruleCarteSpe=ruleCarteSpe
	{ $current=$iv_ruleCarteSpe.current.getText(); }
	EOF;

// Rule CarteSpe
ruleCarteSpe returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='"zero"'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCarteSpeAccess().getZeroKeyword_0_0());
			}
			    |
			kw='"sept"'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCarteSpeAccess().getSeptKeyword_0_1());
			}
			    |
			kw='"+ 4 menteur"'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCarteSpeAccess().getMenteurKeyword_0_2());
			}
			    |
			kw='"aucune"'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCarteSpeAccess().getAucuneKeyword_0_3());
			}
		)
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCarteSpeAccess().getCommaKeyword_1());
			}
		)*
	)
;

// Entry rule entryRuleTemps
entryRuleTemps returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTempsRule()); }
	iv_ruleTemps=ruleTemps
	{ $current=$iv_ruleTemps.current.getText(); }
	EOF;

// Rule Temps
ruleTemps returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='"oui"'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getTempsAccess().getOuiKeyword());
	}
;

// Entry rule entryRuleTas
entryRuleTas returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTasRule()); }
	iv_ruleTas=ruleTas
	{ $current=$iv_ruleTas.current.getText(); }
	EOF;

// Rule Tas
ruleTas returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"1 tas"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTasAccess().getTasKeyword_0());
		}
		    |
		kw='"4 tas"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTasAccess().getTasKeyword_1());
		}
	)
;

// Entry rule entryRuleNbCarte
entryRuleNbCarte returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNbCarteRule()); }
	iv_ruleNbCarte=ruleNbCarte
	{ $current=$iv_ruleNbCarte.current.getText(); }
	EOF;

// Rule NbCarte
ruleNbCarte returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"7 cartes"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNbCarteAccess().getCartesKeyword_0());
		}
		    |
		kw='"10 cartes"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNbCarteAccess().getCartesKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
