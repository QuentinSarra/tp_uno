/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsluno.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsluno.myDsl.MyDslPackage;
import org.xtext.example.mydsluno.myDsl.Pioche;
import org.xtext.example.mydsluno.myDsl.Uno;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Uno</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getPioche <em>Pioche</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getPoser <em>Poser</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getMain <em>Main</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getCartespe <em>Cartespe</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getTemps <em>Temps</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getTas <em>Tas</em>}</li>
 *   <li>{@link org.xtext.example.mydsluno.myDsl.impl.UnoImpl#getNbcarte <em>Nbcarte</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UnoImpl extends MinimalEObjectImpl.Container implements Uno
{
  /**
   * The cached value of the '{@link #getPioche() <em>Pioche</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPioche()
   * @generated
   * @ordered
   */
  protected EList<Pioche> pioche;

  /**
   * The cached value of the '{@link #getPoser() <em>Poser</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPoser()
   * @generated
   * @ordered
   */
  protected EList<String> poser;

  /**
   * The cached value of the '{@link #getMain() <em>Main</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMain()
   * @generated
   * @ordered
   */
  protected EList<String> main;

  /**
   * The cached value of the '{@link #getCartespe() <em>Cartespe</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCartespe()
   * @generated
   * @ordered
   */
  protected EList<String> cartespe;

  /**
   * The cached value of the '{@link #getTemps() <em>Temps</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemps()
   * @generated
   * @ordered
   */
  protected EList<String> temps;

  /**
   * The cached value of the '{@link #getTas() <em>Tas</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTas()
   * @generated
   * @ordered
   */
  protected EList<String> tas;

  /**
   * The cached value of the '{@link #getNbcarte() <em>Nbcarte</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNbcarte()
   * @generated
   * @ordered
   */
  protected EList<String> nbcarte;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UnoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.UNO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Pioche> getPioche()
  {
    if (pioche == null)
    {
      pioche = new EObjectContainmentEList<Pioche>(Pioche.class, this, MyDslPackage.UNO__PIOCHE);
    }
    return pioche;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getPoser()
  {
    if (poser == null)
    {
      poser = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__POSER);
    }
    return poser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getMain()
  {
    if (main == null)
    {
      main = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__MAIN);
    }
    return main;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getCartespe()
  {
    if (cartespe == null)
    {
      cartespe = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__CARTESPE);
    }
    return cartespe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getTemps()
  {
    if (temps == null)
    {
      temps = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__TEMPS);
    }
    return temps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getTas()
  {
    if (tas == null)
    {
      tas = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__TAS);
    }
    return tas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getNbcarte()
  {
    if (nbcarte == null)
    {
      nbcarte = new EDataTypeEList<String>(String.class, this, MyDslPackage.UNO__NBCARTE);
    }
    return nbcarte;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.UNO__PIOCHE:
        return ((InternalEList<?>)getPioche()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.UNO__PIOCHE:
        return getPioche();
      case MyDslPackage.UNO__POSER:
        return getPoser();
      case MyDslPackage.UNO__MAIN:
        return getMain();
      case MyDslPackage.UNO__CARTESPE:
        return getCartespe();
      case MyDslPackage.UNO__TEMPS:
        return getTemps();
      case MyDslPackage.UNO__TAS:
        return getTas();
      case MyDslPackage.UNO__NBCARTE:
        return getNbcarte();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.UNO__PIOCHE:
        getPioche().clear();
        getPioche().addAll((Collection<? extends Pioche>)newValue);
        return;
      case MyDslPackage.UNO__POSER:
        getPoser().clear();
        getPoser().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.UNO__MAIN:
        getMain().clear();
        getMain().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.UNO__CARTESPE:
        getCartespe().clear();
        getCartespe().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.UNO__TEMPS:
        getTemps().clear();
        getTemps().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.UNO__TAS:
        getTas().clear();
        getTas().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.UNO__NBCARTE:
        getNbcarte().clear();
        getNbcarte().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.UNO__PIOCHE:
        getPioche().clear();
        return;
      case MyDslPackage.UNO__POSER:
        getPoser().clear();
        return;
      case MyDslPackage.UNO__MAIN:
        getMain().clear();
        return;
      case MyDslPackage.UNO__CARTESPE:
        getCartespe().clear();
        return;
      case MyDslPackage.UNO__TEMPS:
        getTemps().clear();
        return;
      case MyDslPackage.UNO__TAS:
        getTas().clear();
        return;
      case MyDslPackage.UNO__NBCARTE:
        getNbcarte().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.UNO__PIOCHE:
        return pioche != null && !pioche.isEmpty();
      case MyDslPackage.UNO__POSER:
        return poser != null && !poser.isEmpty();
      case MyDslPackage.UNO__MAIN:
        return main != null && !main.isEmpty();
      case MyDslPackage.UNO__CARTESPE:
        return cartespe != null && !cartespe.isEmpty();
      case MyDslPackage.UNO__TEMPS:
        return temps != null && !temps.isEmpty();
      case MyDslPackage.UNO__TAS:
        return tas != null && !tas.isEmpty();
      case MyDslPackage.UNO__NBCARTE:
        return nbcarte != null && !nbcarte.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (poser: ");
    result.append(poser);
    result.append(", main: ");
    result.append(main);
    result.append(", cartespe: ");
    result.append(cartespe);
    result.append(", temps: ");
    result.append(temps);
    result.append(", tas: ");
    result.append(tas);
    result.append(", nbcarte: ");
    result.append(nbcarte);
    result.append(')');
    return result.toString();
  }

} //UnoImpl
